"use strict";(self.webpackChunkoarepo_ui_docs=self.webpackChunkoarepo_ui_docs||[]).push([[958],{3284:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var o=t(7462),a=t(3366),i=(t(7294),t(3905)),r=["components"],l={sidebar_position:1},u="Configuration",s={unversionedId:"layout/configuration",id:"layout/configuration",title:"Configuration",description:"We can define, how an API data will be rendered in UI using one or more JSON layout configuration files.",source:"@site/docs/layout/configuration.md",sourceDirName:"layout",slug:"/layout/configuration",permalink:"/oarepo-ui/docs/layout/configuration",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/oarepo-ui/docs/intro"},next:{title:"Divided row",permalink:"/oarepo-ui/docs/layout/structural-elements/divided-row"}},d={},c=[{value:"Layout definition",id:"layout-definition",level:2},{value:"Example",id:"example",level:2}],p={toc:c};function m(e){var n=e.components,t=(0,a.Z)(e,r);return(0,i.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"We can define, how an API data will be rendered in UI using one or more JSON layout configuration files."),(0,i.kt)("h2",{id:"layout-definition"},"Layout definition"),(0,i.kt)("p",null,"An UI layout is defined as a JSON object describing how the data are laid\nout on the web page. The layout file might either be generated automatically\nby ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/oarepo/oarepo-model-builder"},"oarepo-model-builder")," or written by hand."),(0,i.kt)("p",null,"A layout definition file consists of a list of ",(0,i.kt)("strong",{parentName:"p"},"Component definition block (CDB)"),", which can\nbe nested at multiple levels:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=layout.json5",title:"layout.json5"},'[\n  {\n    /* Component definition block */\n\n    // The component that renders the part of the layout.\n    "component": "<component name>",\n\n    // Jsonpath reference to the data that the component should render\n    // (actual data is to be provided separately in the UI render context).\n    "data": "<dotted_path_to_data>",\n\n    "className": "list of html classes",\n    "style": "html style element, prefer \'classes\'",\n\n    // Extra props for the component, jinja or react specific\n    ...props\n  }\n  //{/* CDB */}\n  //...\n]\n')),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=layout.json5",title:"layout.json5"},'[\n  {\n    "component": "row",\n    "items": [\n      {\n        "component": "label",\n        "data": "value1.label"\n      },\n      {\n        "component": "label",\n        "data": "value2.label"\n      }\n    ]\n  }\n]\n')))}m.isMDXComponent=!0}}]);